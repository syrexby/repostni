<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "competition".
 *
 * @property integer $id
 * @property integer $user_id
 * @property string $name
 * @property string $description
 * @property string $video_url
 * @property string $video_url_final
 * @property integer $photo_file_id
 * @property string $date
 * @property boolean $active
 * @property string $organizer
 * @property string $organizer_url
 * @property string $created_date
 * @property integer $country_id
 * @property boolean $open
 *
 * @property \common\models\Country $country
 * @property \common\models\File $photoFile
 * @property \common\models\User $user
 * @property \common\models\CompetitionCondition[] $competitionConditions
 * @property \common\models\CompetitionPrize[] $competitionPrizes
 * @property \common\models\CompetitionSponsor[] $competitionSponsors
 * @property \common\models\CompetitionUser[] $competitionUsers
 * @property string $aliasModel
 */
abstract class Competition extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'competition';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'name', 'organizer'], 'required'],
            [['user_id', 'photo_file_id', 'country_id'], 'integer'],
            [['description'], 'string'],
            [['date', 'created_date'], 'safe'],
            [['active', 'open'], 'boolean'],
            [['name', 'video_url', 'video_url_final', 'organizer', 'organizer_url'], 'string', 'max' => 255],
            [['country_id'], 'exist', 'skipOnError' => true, 'targetClass' => Country::className(), 'targetAttribute' => ['country_id' => 'id']],
            [['photo_file_id'], 'exist', 'skipOnError' => true, 'targetClass' => File::className(), 'targetAttribute' => ['photo_file_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'user_id' => Yii::t('app', 'User ID'),
            'name' => Yii::t('app', 'Name'),
            'description' => Yii::t('app', 'Description'),
            'video_url' => Yii::t('app', 'Video Url'),
            'video_url_final' => Yii::t('app', 'Video Url Final'),
            'photo_file_id' => Yii::t('app', 'Photo File ID'),
            'date' => Yii::t('app', 'Date'),
            'active' => Yii::t('app', 'Active'),
            'organizer' => Yii::t('app', 'Organizer'),
            'organizer_url' => Yii::t('app', 'Organizer Url'),
            'created_date' => Yii::t('app', 'Created Date'),
            'country_id' => Yii::t('app', 'Country ID'),
            'open' => Yii::t('app', 'Open'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCountry()
    {
        return $this->hasOne(\common\models\Country::className(), ['id' => 'country_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPhotoFile()
    {
        return $this->hasOne(\common\models\File::className(), ['id' => 'photo_file_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCompetitionConditions()
    {
        return $this->hasMany(\common\models\CompetitionCondition::className(), ['competition_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCompetitionPrizes()
    {
        return $this->hasMany(\common\models\CompetitionPrize::className(), ['competition_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCompetitionSponsors()
    {
        return $this->hasMany(\common\models\CompetitionSponsor::className(), ['competition_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCompetitionUsers()
    {
        return $this->hasMany(\common\models\CompetitionUser::className(), ['competition_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \common\models\query\CompetitionQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\CompetitionQuery(get_called_class());
    }


}
